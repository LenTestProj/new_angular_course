{"ast":null,"code":"import { signal } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class ErrorService {\n  constructor() {\n    this._error = signal('');\n    this.error = this._error.asReadonly();\n  }\n  showError(message) {\n    console.log(message);\n    this._error.set(message);\n  }\n  clearError() {\n    this._error.set('');\n  }\n  static #_ = this.ɵfac = function ErrorService_Factory(t) {\n    return new (t || ErrorService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorService,\n    factory: ErrorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["signal","ErrorService","constructor","_error","error","asReadonly","showError","message","console","log","set","clearError","_","_2","factory","ɵfac","providedIn"],"sources":["/home/lennon/Angular/New Tutorials/Section12:Sending_HTTP_Requests_Responses/starting-project/src/app/shared/error.service.ts"],"sourcesContent":["import { Injectable, signal } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorService {\n  private _error = signal('');\n\n  error = this._error.asReadonly();\n\n  showError(message: string) {\n    console.log(message);\n    this._error.set(message);\n  }\n\n  clearError() {\n    this._error.set('');\n  }\n}\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;;AAKlD,OAAM,MAAOC,YAAY;EAHzBC,YAAA;IAIU,KAAAC,MAAM,GAAGH,MAAM,CAAC,EAAE,CAAC;IAE3B,KAAAI,KAAK,GAAG,IAAI,CAACD,MAAM,CAACE,UAAU,EAAE;;EAEhCC,SAASA,CAACC,OAAe;IACvBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,IAAI,CAACJ,MAAM,CAACO,GAAG,CAACH,OAAO,CAAC;EAC1B;EAEAI,UAAUA,CAAA;IACR,IAAI,CAACR,MAAM,CAACO,GAAG,CAAC,EAAE,CAAC;EACrB;EAAC,QAAAE,CAAA,G;qBAZUX,YAAY;EAAA;EAAA,QAAAY,EAAA,G;WAAZZ,YAAY;IAAAa,OAAA,EAAZb,YAAY,CAAAc,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}