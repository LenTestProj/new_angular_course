{"ast":null,"code":"import { computed, inject, signal } from '@angular/core';\nimport { TaskItemComponent } from './task-item/task-item.component';\nimport { CommonModule } from '@angular/common';\nimport { TasksServiceToken } from 'src/main';\nimport { TASK_STATUS_OPTIONS, TaskStatusOptionsProvider } from '../task.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction TasksListComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r3.text);\n  }\n}\nfunction TasksListComponent_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelement(1, \"app-task-item\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"task\", task_r4);\n  }\n}\nexport class TasksListComponent {\n  constructor() {\n    this.tasksService = inject(TasksServiceToken);\n    this.selectedFilter = signal('all');\n    this.taskStatusOptions = inject(TASK_STATUS_OPTIONS);\n    this.tasks = computed(() => {\n      switch (this.selectedFilter()) {\n        case 'open':\n          return this.tasksService.allTasks().filter(task => task.status === 'OPEN');\n        case 'in-progress':\n          return this.tasksService.allTasks().filter(task => task.status === 'IN_PROGRESS');\n        case 'done':\n          return this.tasksService.allTasks().filter(task => task.status === 'DONE');\n        default:\n          return this.tasksService.allTasks();\n      }\n    });\n  }\n  onChangeTasksFilter(filter) {\n    this.selectedFilter.set(filter);\n  }\n  static #_ = this.ɵfac = function TasksListComponent_Factory(t) {\n    return new (t || TasksListComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TasksListComponent,\n    selectors: [[\"app-tasks-list\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([TaskStatusOptionsProvider]), i0.ɵɵStandaloneFeature],\n    decls: 11,\n    vars: 2,\n    consts: [[3, \"change\"], [\"filter\", \"\"], [\"value\", \"all\"], [4, \"ngFor\", \"ngForOf\"], [3, \"task\"]],\n    template: function TasksListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"header\")(1, \"h2\");\n        i0.ɵɵtext(2, \"My Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\")(4, \"select\", 0, 1);\n        i0.ɵɵlistener(\"change\", function TasksListComponent_Template_select_change_4_listener() {\n          i0.ɵɵrestoreView(_r5);\n          const _r0 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(ctx.onChangeTasksFilter(_r0.value));\n        });\n        i0.ɵɵelementStart(6, \"option\", 2);\n        i0.ɵɵtext(7, \"All\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, TasksListComponent_option_8_Template, 2, 1, \"option\", 3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(9, \"ul\");\n        i0.ɵɵtemplate(10, TasksListComponent_li_10_Template, 2, 1, \"li\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.taskStatusOptions);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks());\n      }\n    },\n    dependencies: [TaskItemComponent, CommonModule, i1.NgForOf],\n    styles: [\"[_nghost-%COMP%] {\\n  display: block;\\n  margin: 2rem auto;\\n  max-width: 40rem;\\n  border-radius: 4px;\\n  background-color: #44433f;\\n}\\n\\nheader[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 0 1rem;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  margin: 0;\\n  color: #d2ccb2;\\n  font-size: 1rem;\\n  text-transform: uppercase;\\n}\\n\\nselect[_ngcontent-%COMP%] {\\n  font: inherit;\\n  padding: 0.5rem;\\n  border: none;\\n  background-color: #262521;\\n  color: #feeaa6;\\n  border-radius: 0.25rem;\\n  font-size: 0.9rem;\\n}\\n\\nul[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 1rem;\\n  flex-direction: column;\\n  list-style: none;\\n  margin: 0;\\n  padding: 0.5rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MvdGFza3MtbGlzdC90YXNrcy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFNBQVM7RUFDVCxjQUFjO0VBQ2QsZUFBZTtFQUNmLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixlQUFlO0VBQ2YsWUFBWTtFQUNaLHlCQUF5QjtFQUN6QixjQUFjO0VBQ2Qsc0JBQXNCO0VBQ3RCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixTQUFTO0VBQ1Qsc0JBQXNCO0VBQ3RCLGdCQUFnQjtFQUNoQixTQUFTO0VBQ1QsZUFBZTtBQUNqQiIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMnJlbSBhdXRvO1xuICBtYXgtd2lkdGg6IDQwcmVtO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NDQzM2Y7XG59XG5cbmhlYWRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMCAxcmVtO1xufVxuXG5oMiB7XG4gIG1hcmdpbjogMDtcbiAgY29sb3I6ICNkMmNjYjI7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cblxuc2VsZWN0IHtcbiAgZm9udDogaW5oZXJpdDtcbiAgcGFkZGluZzogMC41cmVtO1xuICBib3JkZXI6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyNjI1MjE7XG4gIGNvbG9yOiAjZmVlYWE2O1xuICBib3JkZXItcmFkaXVzOiAwLjI1cmVtO1xuICBmb250LXNpemU6IDAuOXJlbTtcbn1cblxudWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDFyZW07XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMC41cmVtO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["computed","inject","signal","TaskItemComponent","CommonModule","TasksServiceToken","TASK_STATUS_OPTIONS","TaskStatusOptionsProvider","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","option_r3","text","ɵɵelement","ɵɵproperty","task_r4","TasksListComponent","constructor","tasksService","selectedFilter","taskStatusOptions","tasks","allTasks","filter","task","status","onChangeTasksFilter","set","_","_2","selectors","standalone","features","ɵɵProvidersFeature","ɵɵStandaloneFeature","decls","vars","consts","template","TasksListComponent_Template","rf","ctx","ɵɵlistener","TasksListComponent_Template_select_change_4_listener","ɵɵrestoreView","_r5","_r0","ɵɵreference","ɵɵresetView","value","ɵɵtemplate","TasksListComponent_option_8_Template","TasksListComponent_li_10_Template","i1","NgForOf","styles"],"sources":["/home/lennon/Angular/New Tutorials/Section9:Understanding_Services_Dependency_Injection/starting-project/src/app/tasks/tasks-list/tasks-list.component.ts","/home/lennon/Angular/New Tutorials/Section9:Understanding_Services_Dependency_Injection/starting-project/src/app/tasks/tasks-list/tasks-list.component.html"],"sourcesContent":["import { Component, computed, inject, signal } from '@angular/core';\n\nimport { TaskItemComponent } from './task-item/task-item.component';\nimport { CommonModule } from '@angular/common';\nimport { TasksService } from '../tasks.service';\nimport { TasksServiceToken } from 'src/main';\nimport {TASK_STATUS_OPTIONS, TaskStatusOptions, TaskStatusOptionsProvider} from '../task.model';\n\n@Component({\n  selector: 'app-tasks-list',\n  standalone: true,\n  templateUrl: './tasks-list.component.html',\n  styleUrls: ['./tasks-list.component.css'],\n  imports: [TaskItemComponent,CommonModule],\n  providers:[TaskStatusOptionsProvider]\n})\nexport class TasksListComponent {\n    private tasksService = inject(TasksServiceToken);\n\n    private selectedFilter = signal<string>('all');\n    taskStatusOptions = inject(TASK_STATUS_OPTIONS);\n\n    tasks = computed(()=>{\n        switch(this.selectedFilter()){\n            case 'open':\n                return this.tasksService.allTasks().filter(task=>task.status==='OPEN');\n            case 'in-progress':\n                return this.tasksService.allTasks().filter(task=>task.status==='IN_PROGRESS'); \n            case 'done':\n                return this.tasksService.allTasks().filter(task=>task.status==='DONE'); \n            default:\n                return this.tasksService.allTasks();                \n        }\n    })\n\n    onChangeTasksFilter(filter: string) {\n        this.selectedFilter.set(filter);\n    }\n}\n","<header>\n  <h2>My Tasks</h2>\n  <p>\n    <select (change)=\"onChangeTasksFilter(filter.value)\" #filter>\n      <option value=\"all\">All</option>\n      <option *ngFor=\"let option of taskStatusOptions\">{{option.text}}</option>\n    </select>\n  </p>\n</header>\n\n<ul>\n    <li *ngFor=\"let task of tasks()\">\n      <app-task-item [task]=\"task\" />\n    </li>\n</ul>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}