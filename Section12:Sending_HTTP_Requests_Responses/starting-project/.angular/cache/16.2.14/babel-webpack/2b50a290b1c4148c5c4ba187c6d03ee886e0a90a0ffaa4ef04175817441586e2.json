{"ast":null,"code":"import { inject, signal } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map, tap, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class PlacesService {\n  constructor() {\n    this.httpClient = inject(HttpClient);\n    this.userPlaces = signal([]);\n    this.loadedUserPlaces = this.userPlaces.asReadonly();\n  }\n  loadAvailablePlaces() {\n    return this.fetchPlaces('http://localhost:3000/places', 'Something went wrong while fetching available places. Please try again later');\n  }\n  loadUserPlaces() {\n    return this.fetchPlaces('http://localhost:3000/user-places', 'Something went wrong while fetching favourite places for the existing user. Please try again later').pipe(tap({\n      next: usrPlaces => {\n        usrPlaces && this.userPlaces.set(usrPlaces);\n      }\n    }));\n  }\n  addPlaceToUserPlaces(place) {\n    // const prevPlaces = this.userPlaces();\n    // this.userPlaces.set([...prevPlaces,place])\n    return this.httpClient.put('http://localhost:3000/user-places', {\n      placeId: place.id\n    }, {\n      observe: 'response'\n    }).pipe(tap(response => {\n      const _userPlaces = response.body?.userPlaces;\n      console.log(\"User places are: \", _userPlaces);\n      this.userPlaces.set(_userPlaces);\n      console.log(\"User places signal is: \", this.userPlaces());\n    }), catchError(error => {\n      // this.userPlaces.set(prevPlaces);\n      return throwError(() => new Error(\"Failed to store selected place.\"));\n    }));\n  }\n  removeUserPlace(place) {}\n  fetchPlaces(url, errorMessage) {\n    return this.httpClient.get(url, {\n      observe: 'response'\n    }).pipe(map(resData => {\n      console.log(\"res data is: \", resData);\n      return resData.body?.places;\n    }), catchError(error => {\n      console.log(\"catche error is: \", error);\n      return throwError(() => {\n        return new Error(errorMessage);\n      });\n    }));\n  }\n  static #_ = this.ɵfac = function PlacesService_Factory(t) {\n    return new (t || PlacesService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlacesService,\n    factory: PlacesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["inject","signal","HttpClient","catchError","map","tap","throwError","PlacesService","constructor","httpClient","userPlaces","loadedUserPlaces","asReadonly","loadAvailablePlaces","fetchPlaces","loadUserPlaces","pipe","next","usrPlaces","set","addPlaceToUserPlaces","place","put","placeId","id","observe","response","_userPlaces","body","console","log","error","Error","removeUserPlace","url","errorMessage","get","resData","places","_","_2","factory","ɵfac","providedIn"],"sources":["/home/lennon/Angular/New Tutorials/Section12:Sending_HTTP_Requests_Responses/starting-project/src/app/places/places.service.ts"],"sourcesContent":["import { Injectable, inject, signal } from '@angular/core';\n\nimport { Place } from './place.model';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map, tap, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlacesService {\n    private httpClient = inject(HttpClient);\n    private userPlaces = signal<Place[]>([]);\n\n    loadedUserPlaces = this.userPlaces.asReadonly();\n\n    loadAvailablePlaces() {\n        return this.fetchPlaces('http://localhost:3000/places','Something went wrong while fetching available places. Please try again later')    \n    }\n\n    loadUserPlaces() {\n        return this.fetchPlaces('http://localhost:3000/user-places','Something went wrong while fetching favourite places for the existing user. Please try again later').pipe(tap({\n            next:(usrPlaces)=>{\n                usrPlaces && this.userPlaces.set (usrPlaces)\n            }   \n        }))\n    }\n\n    addPlaceToUserPlaces(place:Place) {\n        // const prevPlaces = this.userPlaces();\n\n        // this.userPlaces.set([...prevPlaces,place])\n\n        return this.httpClient.put('http://localhost:3000/user-places',{placeId:place.id},{observe:'response'}).pipe(tap((response:any)=>{\n            const _userPlaces = response.body?.userPlaces;\n            console.log(\"User places are: \",_userPlaces)\n            this.userPlaces.set(_userPlaces);\n            console.log(\"User places signal is: \",this.userPlaces())\n        }),catchError(error=>{\n            // this.userPlaces.set(prevPlaces);\n            return throwError(()=>new Error(\"Failed to store selected place.\"))\n        }))\n    }\n\n    removeUserPlace(place: Place) {}\n\n    private fetchPlaces(url:string, errorMessage:string){\n        return this.httpClient.get<{places:Place[]}>(url,{\n                observe:'response'\n            }).pipe(\n                map((resData)=>{\n                    console.log(\"res data is: \",resData);\n                return resData.body?.places;\n                }),\n                catchError((error)=>{\n                    console.log(\"catche error is: \",error)\n                    return throwError(()=>{\n                        return new Error(errorMessage)\n                    })\n                })\n                )  \n    }\n}\n"],"mappings":"AAAA,SAAqBA,MAAM,EAAEC,MAAM,QAAQ,eAAe;AAG1D,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,UAAU,EAAEC,GAAG,EAAEC,GAAG,EAAEC,UAAU,QAAQ,MAAM;;AAKvD,OAAM,MAAOC,aAAa;EAH1BC,YAAA;IAIY,KAAAC,UAAU,GAAGT,MAAM,CAACE,UAAU,CAAC;IAC/B,KAAAQ,UAAU,GAAGT,MAAM,CAAU,EAAE,CAAC;IAExC,KAAAU,gBAAgB,GAAG,IAAI,CAACD,UAAU,CAACE,UAAU,EAAE;;EAE/CC,mBAAmBA,CAAA;IACf,OAAO,IAAI,CAACC,WAAW,CAAC,8BAA8B,EAAC,8EAA8E,CAAC;EAC1I;EAEAC,cAAcA,CAAA;IACV,OAAO,IAAI,CAACD,WAAW,CAAC,mCAAmC,EAAC,oGAAoG,CAAC,CAACE,IAAI,CAACX,GAAG,CAAC;MACvKY,IAAI,EAAEC,SAAS,IAAG;QACdA,SAAS,IAAI,IAAI,CAACR,UAAU,CAACS,GAAG,CAAED,SAAS,CAAC;MAChD;KACH,CAAC,CAAC;EACP;EAEAE,oBAAoBA,CAACC,KAAW;IAC5B;IAEA;IAEA,OAAO,IAAI,CAACZ,UAAU,CAACa,GAAG,CAAC,mCAAmC,EAAC;MAACC,OAAO,EAACF,KAAK,CAACG;IAAE,CAAC,EAAC;MAACC,OAAO,EAAC;IAAU,CAAC,CAAC,CAACT,IAAI,CAACX,GAAG,CAAEqB,QAAY,IAAG;MAC7H,MAAMC,WAAW,GAAGD,QAAQ,CAACE,IAAI,EAAElB,UAAU;MAC7CmB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACH,WAAW,CAAC;MAC5C,IAAI,CAACjB,UAAU,CAACS,GAAG,CAACQ,WAAW,CAAC;MAChCE,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAC,IAAI,CAACpB,UAAU,EAAE,CAAC;IAC5D,CAAC,CAAC,EAACP,UAAU,CAAC4B,KAAK,IAAE;MACjB;MACA,OAAOzB,UAAU,CAAC,MAAI,IAAI0B,KAAK,CAAC,iCAAiC,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;EACP;EAEAC,eAAeA,CAACZ,KAAY,GAAG;EAEvBP,WAAWA,CAACoB,GAAU,EAAEC,YAAmB;IAC/C,OAAO,IAAI,CAAC1B,UAAU,CAAC2B,GAAG,CAAmBF,GAAG,EAAC;MACzCT,OAAO,EAAC;KACX,CAAC,CAACT,IAAI,CACHZ,GAAG,CAAEiC,OAAO,IAAG;MACXR,OAAO,CAACC,GAAG,CAAC,eAAe,EAACO,OAAO,CAAC;MACxC,OAAOA,OAAO,CAACT,IAAI,EAAEU,MAAM;IAC3B,CAAC,CAAC,EACFnC,UAAU,CAAE4B,KAAK,IAAG;MAChBF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAACC,KAAK,CAAC;MACtC,OAAOzB,UAAU,CAAC,MAAI;QAClB,OAAO,IAAI0B,KAAK,CAACG,YAAY,CAAC;MAClC,CAAC,CAAC;IACN,CAAC,CAAC,CACD;EACb;EAAC,QAAAI,CAAA,G;qBAnDQhC,aAAa;EAAA;EAAA,QAAAiC,EAAA,G;WAAbjC,aAAa;IAAAkC,OAAA,EAAblC,aAAa,CAAAmC,IAAA;IAAAC,UAAA,EAFZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}