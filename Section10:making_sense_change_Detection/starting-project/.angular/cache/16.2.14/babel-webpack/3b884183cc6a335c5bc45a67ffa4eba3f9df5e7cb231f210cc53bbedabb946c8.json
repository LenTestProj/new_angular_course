{"ast":null,"code":"import { computed, input } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"status-open\": a0,\n    \"status-in-progress\": a1,\n    \"status-done\": a2\n  };\n};\nexport class TaskItemComponent {\n  constructor() {\n    this.task = input.required();\n    this.taskStatus = computed(() => {\n      switch (this.task().status) {\n        case 'OPEN':\n          return 'Open';\n        case 'IN_PROGRESS':\n          return 'Working on it';\n        case 'DONE':\n          return 'Completed';\n        default:\n          return 'Open';\n      }\n    });\n  }\n  onChangeTaskStatus(taskId, status) {\n    let newStatus = 'OPEN';\n    switch (status) {\n      case 'open':\n        newStatus = 'OPEN';\n        break;\n      case 'in-progress':\n        newStatus = 'IN_PROGRESS';\n        break;\n      case 'done':\n        newStatus = 'DONE';\n        break;\n      default:\n        break;\n    }\n  }\n  static #_ = this.ɵfac = function TaskItemComponent_Factory(t) {\n    return new (t || TaskItemComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TaskItemComponent,\n    selectors: [[\"app-task-item\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 20,\n    vars: 12,\n    consts: [[3, \"ngSubmit\"], [\"status\", \"\"], [\"value\", \"open\", 3, \"selected\"], [\"value\", \"in-progress\", 3, \"selected\"], [\"value\", \"done\", 3, \"selected\"]],\n    template: function TaskItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"article\")(1, \"header\")(2, \"h3\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"p\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function TaskItemComponent_Template_form_ngSubmit_8_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(10);\n          return i0.ɵɵresetView(ctx.onChangeTaskStatus(ctx.task().id, _r0.value));\n        });\n        i0.ɵɵelementStart(9, \"select\", null, 1)(11, \"option\", 2);\n        i0.ɵɵtext(12, \"Open\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 3);\n        i0.ɵɵtext(14, \" In-Progress \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"option\", 4);\n        i0.ɵɵtext(16, \" Completed \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"p\")(18, \"button\");\n        i0.ɵɵtext(19, \"Change Status\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassMap(i0.ɵɵpureFunction3(8, _c0, ctx.task().status === \"OPEN\", ctx.task().status === \"IN_PROGRESS\", ctx.task().status === \"DONE\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.task().title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.taskStatus());\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.task().description);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"selected\", ctx.task().status === \"OPEN\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"selected\", ctx.task().status === \"IN_PROGRESS\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"selected\", ctx.task().status === \"DONE\");\n      }\n    },\n    dependencies: [FormsModule, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.NgControlStatusGroup, i1.NgForm],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["computed","input","FormsModule","TaskItemComponent","constructor","task","required","taskStatus","status","onChangeTaskStatus","taskId","newStatus","_","_2","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","TaskItemComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","TaskItemComponent_Template_form_ngSubmit_8_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","id","value","ɵɵclassMap","ɵɵpureFunction3","_c0","ɵɵadvance","ɵɵtextInterpolate","title","description","ɵɵproperty","i1","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","NgControlStatusGroup","NgForm","encapsulation"],"sources":["/home/lennon/Angular/New Tutorials/Section9:Understanding_Services_Dependency_Injection/starting-project/src/app/tasks/tasks-list/task-item/task-item.component.ts","/home/lennon/Angular/New Tutorials/Section9:Understanding_Services_Dependency_Injection/starting-project/src/app/tasks/tasks-list/task-item/task-item.component.html"],"sourcesContent":["import { Component, computed, input } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { Task, TaskStatus } from '../../task.model';\n\n@Component({\n  selector: 'app-task-item',\n  standalone: true,\n  imports: [FormsModule],\n  templateUrl: './task-item.component.html',\n  styleUrl: './task-item.component.css',\n})\nexport class TaskItemComponent {\n  task = input.required<Task>();\n  taskStatus = computed(() => {\n    switch (this.task().status) {\n      case 'OPEN':\n        return 'Open';\n      case 'IN_PROGRESS':\n        return 'Working on it';\n      case 'DONE':\n        return 'Completed';\n      default:\n        return 'Open';\n    }\n  });\n\n  onChangeTaskStatus(taskId: string, status: string) {\n    let newStatus: TaskStatus = 'OPEN';\n\n    switch (status) {\n      case 'open':\n        newStatus = 'OPEN';\n        break;\n      case 'in-progress':\n        newStatus = 'IN_PROGRESS';\n        break;\n      case 'done':\n        newStatus = 'DONE';\n        break;\n      default:\n        break;\n    }\n  }\n}\n","<article\n  [class]=\"{\n    'status-open': task().status === 'OPEN',\n    'status-in-progress': task().status === 'IN_PROGRESS',\n    'status-done': task().status === 'DONE'\n  }\"\n>\n  <header>\n    <h3>{{ task().title }}</h3>\n    <p>{{ taskStatus() }}</p>\n  </header>\n  <p>{{ task().description }}</p>\n  <form (ngSubmit)=\"onChangeTaskStatus(task().id, status.value)\">\n    <select #status>\n      <option value=\"open\" [selected]=\"task().status === 'OPEN'\">Open</option>\n      <option value=\"in-progress\" [selected]=\"task().status === 'IN_PROGRESS'\">\n        In-Progress\n      </option>\n      <option value=\"done\" [selected]=\"task().status === 'DONE'\">\n        Completed\n      </option>\n    </select>\n    <p>\n      <button>Change Status</button>\n    </p>\n  </form>\n</article>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}