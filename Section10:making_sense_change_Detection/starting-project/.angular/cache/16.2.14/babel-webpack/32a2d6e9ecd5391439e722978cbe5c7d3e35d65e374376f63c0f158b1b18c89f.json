{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction AppComponent_li_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 3);\n    i0.ɵɵlistener(\"click\", function AppComponent_li_27_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onReset(i_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const temperature_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(temperature_r1);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.currentDate = new Date();\n    this.currentTemperaturs = {\n      berlin: 4.2749812,\n      newYork: 18.1214,\n      paris: 72.1209001,\n      chicago: 65.0775238\n    };\n    this.historicTemperatures = [25, 37, 19, -4, 28, 21, 19, 28, 33, 31, 9, 11, 5, -12, -5];\n  }\n  onReset(index) {\n    this.historicTemperatures[index] = 18;\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 28,\n    vars: 9,\n    consts: [[1, \"temperatures\"], [\"src\", \"temp-icon.png\", \"alt\", \"Thermometer icon\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"main\")(1, \"article\", 0)(2, \"header\");\n        i0.ɵɵelement(3, \"img\", 1);\n        i0.ɵɵelementStart(4, \"div\")(5, \"h2\");\n        i0.ɵɵtext(6, \"Current Temperatures\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"date\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"p\");\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"p\");\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\");\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"article\", 0)(19, \"header\");\n        i0.ɵɵelement(20, \"img\", 1);\n        i0.ɵɵelementStart(21, \"div\")(22, \"h2\");\n        i0.ɵɵtext(23, \"Historic Temperatures\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25, \"Berlin\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"ul\");\n        i0.ɵɵtemplate(27, AppComponent_li_27_Template, 2, 1, \"li\", 2);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 6, ctx.currentDate, \"medium\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"New York: \", ctx.currentTemperaturs.newYork, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Berlin: \", ctx.currentTemperaturs.berlin, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Paris: \", ctx.currentTemperaturs.paris, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Chicago: \", ctx.currentTemperaturs.chicago, \"\");\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.historicTemperatures);\n      }\n    },\n    dependencies: [CommonModule, i1.NgForOf, i1.DatePipe],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["CommonModule","i0","ɵɵelementStart","ɵɵlistener","AppComponent_li_27_Template_li_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","onReset","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","temperature_r1","AppComponent","constructor","currentDate","Date","currentTemperaturs","berlin","newYork","paris","chicago","historicTemperatures","_","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AppComponent_li_27_Template","ɵɵpipeBind2","ɵɵtextInterpolate1","ɵɵproperty","i1","NgForOf","DatePipe","encapsulation"],"sources":["/home/lennon/Angular/New Tutorials/Section8:Transforming_Values_Pipes/starting-project/src/app/app.component.ts","/home/lennon/Angular/New Tutorials/Section8:Transforming_Values_Pipes/starting-project/src/app/app.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  templateUrl: './app.component.html',\n  imports:[CommonModule]\n})\nexport class AppComponent {\n  currentDate = new Date();\n  currentTemperaturs = {\n    berlin: 4.2749812,\n    newYork: 18.1214,\n    paris: 72.1209001,\n    chicago: 65.0775238,\n  };\n\n  historicTemperatures = [\n    25, 37, 19, -4, 28, 21, 19, 28, 33, 31, 9, 11, 5, -12, -5,\n  ];\n\n  onReset(index: number) {\n    this.historicTemperatures[index] = 18;\n  }\n}\n","<main>\n  <article class=\"temperatures\">\n    <header>\n      <img src=\"temp-icon.png\" alt=\"Thermometer icon\" />\n      <div>\n        <h2>Current Temperatures</h2>\n        <p>{{ currentDate | date:'medium'}}</p>\n      </div>\n    </header>\n    <p>New York: {{ currentTemperaturs.newYork }}</p>\n    <p>Berlin: {{ currentTemperaturs.berlin }}</p>\n    <p>Paris: {{ currentTemperaturs.paris }}</p>\n    <p>Chicago: {{ currentTemperaturs.chicago }}</p>\n  </article>\n\n  <article class=\"temperatures\">\n    <header>\n      <img src=\"temp-icon.png\" alt=\"Thermometer icon\" />\n      <div>\n        <h2>Historic Temperatures</h2>\n        <p>Berlin</p>\n      </div>\n    </header>\n    <ul>\n      <li *ngFor=\"let temperature of historicTemperatures;let i=index\" (click)=\"onReset(i)\">{{ temperature }}</li>\n    </ul>\n  </article>\n</main>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}