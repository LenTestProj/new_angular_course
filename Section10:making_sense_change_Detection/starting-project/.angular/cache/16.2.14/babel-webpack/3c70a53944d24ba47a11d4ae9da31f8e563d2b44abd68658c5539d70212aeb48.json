{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.permissionSubject = new BehaviorSubject(\"guest\");\n    this.permissionChanges = this.permissionSubject.asObservable();\n    this.activePermission = 'guest';\n  }\n  authenticate(email, password) {\n    console.log(email, password);\n    if (email === 'admin@example.com' && password === 'admin') {\n      this.activePermission = 'admin';\n      this.permissionSubject.next('admin');\n    } else if (email === 'user@example.com' && password === 'user') {\n      this.activePermission = 'user';\n      this.permissionSubject.next('user');\n    } else {\n      this.permissionSubject.next('guest');\n      this.activePermission = 'guest';\n    }\n  }\n  logout() {\n    this.activePermission = 'guest';\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","AuthService","constructor","permissionSubject","permissionChanges","asObservable","activePermission","authenticate","email","password","console","log","next","logout","_","_2","factory","ɵfac","providedIn"],"sources":["/home/lennon/Angular/New Tutorials/Section7:Enhancing_elements_deepDive/starting-project/src/app/auth/auth.service.ts"],"sourcesContent":["import { Injectable, signal } from '@angular/core';\n\nimport { Permission } from './auth.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n    private permissionSubject = new BehaviorSubject<Permission>(\"guest\");\n    permissionChanges:Observable<Permission> = this.permissionSubject.asObservable();\n\n    activePermission:Permission = 'guest';\n\n    authenticate(email: string, password: string) {\n        console.log(email, password);\n        if (email === 'admin@example.com' && password === 'admin') {\n            this.activePermission = 'admin';\n            this.permissionSubject.next('admin');\n        } else if (email === 'user@example.com' && password === 'user') {\n            this.activePermission = 'user';\n            this.permissionSubject.next('user');\n        } else {\n            this.permissionSubject.next('guest');\n            this.activePermission = 'guest';\n        }\n    }\n\n    logout() {\n        this.activePermission = 'guest';\n    }\n}\n"],"mappings":"AAGA,SAASA,eAAe,QAAoB,MAAM;;AAKlD,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAIY,KAAAC,iBAAiB,GAAG,IAAIH,eAAe,CAAa,OAAO,CAAC;IACpE,KAAAI,iBAAiB,GAA0B,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;IAEhF,KAAAC,gBAAgB,GAAc,OAAO;;EAErCC,YAAYA,CAACC,KAAa,EAAEC,QAAgB;IACxCC,OAAO,CAACC,GAAG,CAACH,KAAK,EAAEC,QAAQ,CAAC;IAC5B,IAAID,KAAK,KAAK,mBAAmB,IAAIC,QAAQ,KAAK,OAAO,EAAE;MACvD,IAAI,CAACH,gBAAgB,GAAG,OAAO;MAC/B,IAAI,CAACH,iBAAiB,CAACS,IAAI,CAAC,OAAO,CAAC;KACvC,MAAM,IAAIJ,KAAK,KAAK,kBAAkB,IAAIC,QAAQ,KAAK,MAAM,EAAE;MAC5D,IAAI,CAACH,gBAAgB,GAAG,MAAM;MAC9B,IAAI,CAACH,iBAAiB,CAACS,IAAI,CAAC,MAAM,CAAC;KACtC,MAAM;MACH,IAAI,CAACT,iBAAiB,CAACS,IAAI,CAAC,OAAO,CAAC;MACpC,IAAI,CAACN,gBAAgB,GAAG,OAAO;;EAEvC;EAEAO,MAAMA,CAAA;IACF,IAAI,CAACP,gBAAgB,GAAG,OAAO;EACnC;EAAC,QAAAQ,CAAA,G;qBAtBQb,WAAW;EAAA;EAAA,QAAAc,EAAA,G;WAAXd,WAAW;IAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}