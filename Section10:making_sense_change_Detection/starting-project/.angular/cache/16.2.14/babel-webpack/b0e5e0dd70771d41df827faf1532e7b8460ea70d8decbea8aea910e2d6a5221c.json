{"ast":null,"code":"import { InjectionToken } from \"@angular/core\";\nexport const TASK_STATUS_OPTIONS = new InjectionToken('task-status-options');\nexport const TaskStatusOptions = [{\n  value: \"open\",\n  taskStatus: \"OPEN\",\n  text: \"OPEN\"\n}, {\n  value: \"in-progress\",\n  taskStatus: \"IN_PROGRESS\",\n  text: \"In-Progress\"\n}, {\n  value: \"done\",\n  taskStatus: \"DONE\",\n  text: \"Completed\"\n}];\nexport const TaskStatusOptionsProvider = {\n  provide: TASK_STATUS_OPTIONS,\n  useValue: TaskStatusOptions\n};","map":{"version":3,"names":["InjectionToken","TASK_STATUS_OPTIONS","TaskStatusOptions","value","taskStatus","text","TaskStatusOptionsProvider","provide","useValue"],"sources":["/home/lennon/Angular/New Tutorials/Section9:Understanding_Services_Dependency_Injection/starting-project/src/app/tasks/task.model.ts"],"sourcesContent":["import { InjectionToken, Provider } from \"@angular/core\";\n\nexport type TaskStatus = 'OPEN' | 'IN_PROGRESS' | 'DONE';\n\ntype TaskStatusOptions= {\n    value:'open'|'in-progress'|'done';\n    text:string; taskStatus:TaskStatus\n}[]\n\nexport const TASK_STATUS_OPTIONS = new InjectionToken<TaskStatusOptions>('task-status-options');\n\nexport const TaskStatusOptions:TaskStatusOptions = [\n    {\n        value:\"open\",\n        taskStatus:\"OPEN\",\n        text:\"OPEN\"\n    },\n    {\n        value:\"in-progress\",\n        taskStatus:\"IN_PROGRESS\",\n        text:\"In-Progress\"\n    },\n    {\n        value:\"done\",\n        taskStatus:\"DONE\",\n        text:\"Completed\"\n    }\n]\n\nexport const TaskStatusOptionsProvider:Provider={\n    provide:TASK_STATUS_OPTIONS,\n    useValue:TaskStatusOptions\n  }\n\nexport interface Task {\n  id: string;\n  title: string;\n  description: string;\n  status: TaskStatus;\n}\n"],"mappings":"AAAA,SAASA,cAAc,QAAkB,eAAe;AASxD,OAAO,MAAMC,mBAAmB,GAAG,IAAID,cAAc,CAAoB,qBAAqB,CAAC;AAE/F,OAAO,MAAME,iBAAiB,GAAqB,CAC/C;EACIC,KAAK,EAAC,MAAM;EACZC,UAAU,EAAC,MAAM;EACjBC,IAAI,EAAC;CACR,EACD;EACIF,KAAK,EAAC,aAAa;EACnBC,UAAU,EAAC,aAAa;EACxBC,IAAI,EAAC;CACR,EACD;EACIF,KAAK,EAAC,MAAM;EACZC,UAAU,EAAC,MAAM;EACjBC,IAAI,EAAC;CACR,CACJ;AAED,OAAO,MAAMC,yBAAyB,GAAU;EAC5CC,OAAO,EAACN,mBAAmB;EAC3BO,QAAQ,EAACN;CACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}