{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TasksSevice {\n  constructor() {\n    this.tasks = [{\n      id: 't1',\n      userId: 'u1',\n      title: 'Master Angular',\n      summary: 'Learn all the basic and advanced features of Angular & how to apply them.',\n      dueDate: '2025-12-31'\n    }, {\n      id: 't2',\n      userId: 'u3',\n      title: 'Build first prototype',\n      summary: 'Build a first prototype of the online shop website',\n      dueDate: '2024-05-31'\n    }, {\n      id: 't3',\n      userId: 'u3',\n      title: 'Prepare issue template',\n      summary: 'Prepare and describe an issue template which will help with project management',\n      dueDate: '2024-06-15'\n    }];\n    const tasks = localStorage.getItem('tasks');\n    if (tasks) {\n      this.tasks = JSON.parse(tasks);\n    }\n  }\n  getUserTasks(userId) {\n    return this.tasks.filter(task => task.userId === userId);\n  }\n  addTask(taskData, userId) {\n    this.tasks.push({\n      id: new Date().getTime().toString(),\n      userId: userId,\n      title: taskData.title,\n      summary: taskData.summary,\n      dueDate: taskData.date\n    });\n    this.saveTasks();\n  }\n  removeTask(id) {\n    this.tasks = this.tasks.filter(task => task.id !== id);\n    this.saveTasks();\n  }\n  saveTasks() {\n    localStorage.setItem('tasks', JSON.stringify(this.tasks));\n  }\n  static #_ = this.ɵfac = function TasksSevice_Factory(t) {\n    return new (t || TasksSevice)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TasksSevice,\n    factory: TasksSevice.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["TasksSevice","constructor","tasks","id","userId","title","summary","dueDate","localStorage","getItem","JSON","parse","getUserTasks","filter","task","addTask","taskData","push","Date","getTime","toString","date","saveTasks","removeTask","setItem","stringify","_","_2","factory","ɵfac","providedIn"],"sources":["/home/lennon/Angular/New Tutorials/Section3_working_with_modules/Section3_starting_project/src/app/tasks/tasks.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { NewTask } from \"./task/task.model\";\n\n@Injectable({providedIn:'root'})\nexport class TasksSevice{\n    private tasks=[\n        {\n            id: 't1',\n            userId: 'u1',\n            title: 'Master Angular',\n            summary:\n              'Learn all the basic and advanced features of Angular & how to apply them.',\n            dueDate: '2025-12-31',\n        },\n        {\n            id: 't2',\n            userId: 'u3',\n            title: 'Build first prototype',\n            summary: 'Build a first prototype of the online shop website',\n            dueDate: '2024-05-31',\n        },\n        {\n            id: 't3',\n            userId: 'u3',\n            title: 'Prepare issue template',\n            summary:\n              'Prepare and describe an issue template which will help with project management',\n            dueDate: '2024-06-15',\n          },\n    ];\n\n    constructor(){\n        const tasks=localStorage.getItem('tasks');\n        if(tasks){\n            this.tasks=JSON.parse(tasks);\n        }\n    }\n\n    getUserTasks(userId:string){\n        return this.tasks.filter(task=>task.userId===userId); \n    }\n\n    addTask(taskData:NewTask,userId:string){\n        this.tasks.push({\n            id:new Date().getTime().toString(),\n            userId:userId,\n            title:taskData.title,\n            summary:taskData.summary,\n            dueDate:taskData.date\n        }); \n        this.saveTasks()   \n    }\n\n    removeTask(id:string){\n        this.tasks=this.tasks.filter(task=>task.id!==id);\n        this.saveTasks()   \n    }\n\n    private saveTasks(){\n        localStorage.setItem('tasks',JSON.stringify(this.tasks))\n    }\n}"],"mappings":";AAIA,OAAM,MAAOA,WAAW;EA2BpBC,YAAA;IA1BQ,KAAAC,KAAK,GAAC,CACV;MACIC,EAAE,EAAE,IAAI;MACRC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE,gBAAgB;MACvBC,OAAO,EACL,2EAA2E;MAC7EC,OAAO,EAAE;KACZ,EACD;MACIJ,EAAE,EAAE,IAAI;MACRC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE,uBAAuB;MAC9BC,OAAO,EAAE,oDAAoD;MAC7DC,OAAO,EAAE;KACZ,EACD;MACIJ,EAAE,EAAE,IAAI;MACRC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE,wBAAwB;MAC/BC,OAAO,EACL,gFAAgF;MAClFC,OAAO,EAAE;KACV,CACN;IAGG,MAAML,KAAK,GAACM,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzC,IAAGP,KAAK,EAAC;MACL,IAAI,CAACA,KAAK,GAACQ,IAAI,CAACC,KAAK,CAACT,KAAK,CAAC;;EAEpC;EAEAU,YAAYA,CAACR,MAAa;IACtB,OAAO,IAAI,CAACF,KAAK,CAACW,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACV,MAAM,KAAGA,MAAM,CAAC;EACxD;EAEAW,OAAOA,CAACC,QAAgB,EAACZ,MAAa;IAClC,IAAI,CAACF,KAAK,CAACe,IAAI,CAAC;MACZd,EAAE,EAAC,IAAIe,IAAI,EAAE,CAACC,OAAO,EAAE,CAACC,QAAQ,EAAE;MAClChB,MAAM,EAACA,MAAM;MACbC,KAAK,EAACW,QAAQ,CAACX,KAAK;MACpBC,OAAO,EAACU,QAAQ,CAACV,OAAO;MACxBC,OAAO,EAACS,QAAQ,CAACK;KACpB,CAAC;IACF,IAAI,CAACC,SAAS,EAAE;EACpB;EAEAC,UAAUA,CAACpB,EAAS;IAChB,IAAI,CAACD,KAAK,GAAC,IAAI,CAACA,KAAK,CAACW,MAAM,CAACC,IAAI,IAAEA,IAAI,CAACX,EAAE,KAAGA,EAAE,CAAC;IAChD,IAAI,CAACmB,SAAS,EAAE;EACpB;EAEQA,SAASA,CAAA;IACbd,YAAY,CAACgB,OAAO,CAAC,OAAO,EAACd,IAAI,CAACe,SAAS,CAAC,IAAI,CAACvB,KAAK,CAAC,CAAC;EAC5D;EAAC,QAAAwB,CAAA,G;qBAxDQ1B,WAAW;EAAA;EAAA,QAAA2B,EAAA,G;WAAX3B,WAAW;IAAA4B,OAAA,EAAX5B,WAAW,CAAA6B,IAAA;IAAAC,UAAA,EADA;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}