{"ast":null,"code":"import { signal } from \"@angular/core\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class MessagesService {\n  constructor() {\n    this.messages$ = new BehaviorSubject([]);\n    this.messages = signal([]);\n    this.allMessages = this.messages.asReadonly();\n  }\n  addMessage(message) {\n    this.messages.update(oldMessages => [...oldMessages, message]);\n  }\n  static #_ = this.ɵfac = function MessagesService_Factory(t) {\n    return new (t || MessagesService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MessagesService,\n    factory: MessagesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["signal","BehaviorSubject","MessagesService","constructor","messages$","messages","allMessages","asReadonly","addMessage","message","update","oldMessages","_","_2","factory","ɵfac","providedIn"],"sources":["/home/lennon/Angular/New Tutorials/Section10:making_sense_change_Detection/starting-project/src/app/messages/messages.service.ts"],"sourcesContent":["import { Injectable, signal } from \"@angular/core\";\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n    providedIn:'root'\n})\nexport class MessagesService{\n    messages$ = new BehaviorSubject<string[]>([]);\n    private messages = signal<string[]>([]);\n    allMessages = this.messages.asReadonly(); \n\n    addMessage(message:string){\n        this.messages.update((oldMessages)=>[...oldMessages,message])\n    }\n\n    // addMessage(message:string){\n    //     this.messages=[...this.messages,message];\n    //     this.messages$.next([...this.messages])\n    // }\n}"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAAQC,eAAe,QAAO,MAAM;;AAKpC,OAAM,MAAOC,eAAe;EAH5BC,YAAA;IAII,KAAAC,SAAS,GAAG,IAAIH,eAAe,CAAW,EAAE,CAAC;IACrC,KAAAI,QAAQ,GAAGL,MAAM,CAAW,EAAE,CAAC;IACvC,KAAAM,WAAW,GAAG,IAAI,CAACD,QAAQ,CAACE,UAAU,EAAE;;EAExCC,UAAUA,CAACC,OAAc;IACrB,IAAI,CAACJ,QAAQ,CAACK,MAAM,CAAEC,WAAW,IAAG,CAAC,GAAGA,WAAW,EAACF,OAAO,CAAC,CAAC;EACjE;EAAC,QAAAG,CAAA,G;qBAPQV,eAAe;EAAA;EAAA,QAAAW,EAAA,G;WAAfX,eAAe;IAAAY,OAAA,EAAfZ,eAAe,CAAAa,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}