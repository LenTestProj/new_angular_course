{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { DestroyRef, afterNextRender, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = [\"form\"];\nfunction LoginComponent_p_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵtext(1, \" Invalid Email address entered. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_p_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 12);\n    i0.ɵɵtext(1, \" Invalid Email address entered. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor() {\n    //similar to use-effect in react\n    this.destroyRef = inject(DestroyRef);\n    afterNextRender(() => {\n      const subscription = this.form.valueChanges?.subscribe({\n        next: value => {\n          console.log(value);\n        }\n      });\n      this.destroyRef.onDestroy(() => {\n        subscription?.unsubscribe();\n      });\n    });\n  }\n  onSubmit(formData) {\n    if (!formData.form.valid) {\n      return;\n    }\n    const enteredEmail = formData.form.value.email;\n    const enteredPassword = formData.form.value.password;\n    formData.form.reset();\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    viewQuery: function LoginComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.form = _t.first);\n      }\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 19,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"control-row\"], [1, \"control\", \"no-margin\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"name\", \"email\", \"ngModel\", \"\", \"required\", \"\", \"email\", \"\"], [\"email\", \"ngModel\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"name\", \"password\", \"ngModel\", \"\", \"required\", \"\", \"minlength\", \"6\"], [\"password\", \"ngModel\"], [1, \"button\"], [\"class\", \"control-error\", 4, \"ngif\"], [1, \"control-error\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n          i0.ɵɵrestoreView(_r5);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelementStart(2, \"h2\");\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5, 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8, 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 10);\n        i0.ɵɵtext(16, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(17, LoginComponent_p_17_Template, 2, 0, \"p\", 11);\n        i0.ɵɵtemplate(18, LoginComponent_p_18_Template, 2, 0, \"p\", 11);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(9);\n        const _r2 = i0.ɵɵreference(14);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngif\", _r1.touched && _r1.dirty && _r1.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngif\", _r2.touched && _r2.dirty && _r1.invalid);\n      }\n    },\n    dependencies: [FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinLengthValidator, i1.EmailValidator, i1.NgModel, i1.NgForm, CommonModule],\n    styles: [\".control-row[_ngcontent-%COMP%] {\\n  align-items: flex-end;\\n}\\n\\n.control[_ngcontent-%COMP%] {\\n  flex: 1;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  padding: 0.6rem 1.75rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsT0FBTztBQUNUOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRyb2wtcm93IHtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xufVxuXG4uY29udHJvbCB7XG4gIGZsZXg6IDE7XG59XG5cbmJ1dHRvbiB7XG4gIHBhZGRpbmc6IDAuNnJlbSAxLjc1cmVtO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","DestroyRef","afterNextRender","inject","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","destroyRef","subscription","form","valueChanges","subscribe","next","value","console","log","onDestroy","unsubscribe","onSubmit","formData","valid","enteredEmail","email","enteredPassword","password","reset","_","_2","selectors","viewQuery","LoginComponent_Query","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r5","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","LoginComponent_p_17_Template","LoginComponent_p_18_Template","ɵɵadvance","ɵɵproperty","_r1","touched","dirty","invalid","_r2","i1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinLengthValidator","EmailValidator","NgModel","NgForm","styles"],"sources":["/home/lennon/Angular/New Tutorials/Section13: Handling User Input and Forms/starting-project/src/app/auth/login/login.component.ts","/home/lennon/Angular/New Tutorials/Section13: Handling User Input and Forms/starting-project/src/app/auth/login/login.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, DestroyRef, ViewChild, afterNextRender, inject } from '@angular/core';\nimport { FormsModule, NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  imports:[FormsModule,CommonModule]\n})\nexport class LoginComponent {\n    @ViewChild('form') form!:NgForm;\n    private destroyRef = inject(DestroyRef);\n\n    constructor(){\n        //similar to use-effect in react\n\n        afterNextRender(()=>{\n            const subscription = this.form.valueChanges?.subscribe({next:(value)=>{\n                console.log(value);      \n            }});\n\n            this.destroyRef.onDestroy(()=>{\n                subscription?.unsubscribe()\n            })\n        })\n    }\n\n    onSubmit(formData:NgForm){\n        if(!formData.form.valid){\n            return;\n        }\n        const enteredEmail =  formData.form.value.email;\n        const enteredPassword = formData.form.value.password;\n\n        formData.form.reset();\n    }   \n}\n","<form #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\">\n    <h2>Login</h2>\n\n    <div class=\"control-row\">\n        <div class=\"control no-margin\">\n        <label for=\"email\">Email</label>\n        <input id=\"email\" type=\"email\" name=\"email\" ngModel required email #email=\"ngModel\"/> <!--NgModel registers the input element with angular. Required is a directive to check if the field is not empty. Required field is used since ngModel allows angular to take control of the field -->\n        </div>\n\n        <div class=\"control no-margin\">\n        <label for=\"password\">Password</label>\n        <input id=\"password\" type=\"password\" name=\"password\" ngModel required minlength=\"6\"\n        #password=\"ngModel\"/>\n        </div>\n\n        <button class=\"button\">Login</button>\n    </div>\n\n    <p class=\"control-error\" *ngif=\"email.touched && email.dirty && email.invalid\">\n        Invalid Email address entered.\n    </p>\n\n    <p class=\"control-error\" *ngif=\"password.touched && password.dirty && email.invalid\">\n        Invalid Email address entered.\n    </p>\n</form>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}