{"ast":null,"code":"import { Router } from \"@angular/router\";\nimport { NoTaskComponent } from \"./tasks/no-task/no-task.component\";\nimport { UserTasksComponent } from \"./users/user-tasks/user-tasks.component\";\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\nimport { routes as userRoutes } from './users/users.route';\nimport { resolveUserName } from \"./users/users.component\";\nimport { inject } from \"@angular/core\";\nconst dummyCanMatch = (route, segments) => {\n  const router = inject(Router);\n  const shouldGetAccess = Math.random();\n  if (shouldGetAccess) {\n    return true;\n  } else {\n    return router.parseUrl('/unauthorized');\n  }\n};\nexport const routes = [{\n  path: \"\",\n  component: NoTaskComponent,\n  title: \"No task Selected\" //sets the title for the given route\n}, {\n  path: \"users/:userId\",\n  component: UserTasksComponent,\n  children: userRoutes,\n  canMatch: [dummyCanMatch],\n  data: {\n    message: 'Hello!'\n  },\n  resolve: {\n    userName: resolveUserName\n  }\n}, {\n  path: '**',\n  component: NotFoundComponent\n}];","map":{"version":3,"names":["Router","NoTaskComponent","UserTasksComponent","NotFoundComponent","routes","userRoutes","resolveUserName","inject","dummyCanMatch","route","segments","router","shouldGetAccess","Math","random","parseUrl","path","component","title","children","canMatch","data","message","resolve","userName"],"sources":["/home/lennon/Angular/New Tutorials/Section15:Code_Splitting_Deferrable_Views/starting-project/src/app/app.routes.ts"],"sourcesContent":["import { CanMatchFn, Router, Routes, UrlTree } from \"@angular/router\";\nimport { TasksComponent } from \"./tasks/tasks.component\";\nimport { NoTaskComponent } from \"./tasks/no-task/no-task.component\";\nimport { UserTasksComponent } from \"./users/user-tasks/user-tasks.component\";\nimport { NewTaskComponent } from \"./tasks/new-task/new-task.component\";\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\nimport {routes as userRoutes} from './users/users.route';\nimport { resolveUserName } from \"./users/users.component\";\nimport { retry } from \"rxjs\";\nimport { inject } from \"@angular/core\";\n\nconst dummyCanMatch:CanMatchFn=(route,segments)=>{\n    const router = inject(Router);\n    const shouldGetAccess = Math.random();\n    if(shouldGetAccess){\n        return true;\n    }\n    else{\n        return router.parseUrl('/unauthorized');\n    }     \n}\n\n\nexport const routes:Routes=[\n    {\n        path:\"\", //<your-domain>\n        component:NoTaskComponent,\n        title:\"No task Selected\" //sets the title for the given route\n    },\n    {\n        path:\"users/:userId\",  //<your-domain>/users/<uid>\n        component:UserTasksComponent,\n        children:userRoutes,\n        canMatch:[dummyCanMatch],\n        data:{\n            message:'Hello!'\n        },\n        resolve:{\n            userName:resolveUserName   \n        },\n    },\n    {\n        path:'**', //no route is met.. default route\n        component:NotFoundComponent\n    }\n]"],"mappings":"AAAA,SAAqBA,MAAM,QAAyB,iBAAiB;AAErE,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,kBAAkB,QAAQ,yCAAyC;AAE5E,SAASC,iBAAiB,QAAQ,iCAAiC;AACnE,SAAQC,MAAM,IAAIC,UAAU,QAAO,qBAAqB;AACxD,SAASC,eAAe,QAAQ,yBAAyB;AAEzD,SAASC,MAAM,QAAQ,eAAe;AAEtC,MAAMC,aAAa,GAAYA,CAACC,KAAK,EAACC,QAAQ,KAAG;EAC7C,MAAMC,MAAM,GAAGJ,MAAM,CAACP,MAAM,CAAC;EAC7B,MAAMY,eAAe,GAAGC,IAAI,CAACC,MAAM,EAAE;EACrC,IAAGF,eAAe,EAAC;IACf,OAAO,IAAI;GACd,MACG;IACA,OAAOD,MAAM,CAACI,QAAQ,CAAC,eAAe,CAAC;;AAE/C,CAAC;AAGD,OAAO,MAAMX,MAAM,GAAQ,CACvB;EACIY,IAAI,EAAC,EAAE;EACPC,SAAS,EAAChB,eAAe;EACzBiB,KAAK,EAAC,kBAAkB,CAAC;CAC5B,EACD;EACIF,IAAI,EAAC,eAAe;EACpBC,SAAS,EAACf,kBAAkB;EAC5BiB,QAAQ,EAACd,UAAU;EACnBe,QAAQ,EAAC,CAACZ,aAAa,CAAC;EACxBa,IAAI,EAAC;IACDC,OAAO,EAAC;GACX;EACDC,OAAO,EAAC;IACJC,QAAQ,EAAClB;;CAEhB,EACD;EACIU,IAAI,EAAC,IAAI;EACTC,SAAS,EAACd;CACb,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}