{"ast":null,"code":"// import { canLeaveEditPage, resolveTitle, resolveUserTasks } from '../tasks/tasks.component';\nimport { NewTaskComponent, resolveTitle } from '../tasks/new-task/new-task.component';\nimport { TasksService } from '../tasks/tasks.service';\nimport { inject } from '@angular/core';\nconst resolveUserTasks = (activatedRouteSnapshot, routerState) => {\n  const order = activatedRouteSnapshot.queryParams['order'];\n  const tasksService = inject(TasksService);\n  const tasks = tasksService.allTasks().filter(task => task.userId === activatedRouteSnapshot.paramMap.get('userId'));\n  if (order && order === 'asc') {\n    tasks.sort((a, b) => a.id > b.id ? 1 : -1);\n  } else {\n    tasks.sort((a, b) => a.id > b.id ? -1 : 1);\n  }\n  return tasks.length ? tasks : [];\n};\nexport const routes = [{\n  path: '',\n  redirectTo: 'tasks',\n  pathMatch: 'full'\n}, {\n  path: 'tasks',\n  loadComponent: () => import(\"../tasks/tasks.component\").then(mod => mod.TasksComponent),\n  runGuardsAndResolvers: 'always',\n  resolve: {\n    userTasks: resolveUserTasks\n  },\n  title: resolveTitle\n}, {\n  path: 'tasks/new',\n  component: NewTaskComponent\n  // canDeactivate:[canLeaveEditPage]\n}];","map":{"version":3,"names":["NewTaskComponent","resolveTitle","TasksService","inject","resolveUserTasks","activatedRouteSnapshot","routerState","order","queryParams","tasksService","tasks","allTasks","filter","task","userId","paramMap","get","sort","a","b","id","length","routes","path","redirectTo","pathMatch","loadComponent","then","mod","TasksComponent","runGuardsAndResolvers","resolve","userTasks","title","component"],"sources":["/home/lennon/Angular/New Tutorials/Section15:Code_Splitting_Deferrable_Views/starting-project/src/app/users/users.route.ts"],"sourcesContent":["import { ResolveFn, Routes } from '@angular/router';\n\n// import { canLeaveEditPage, resolveTitle, resolveUserTasks } from '../tasks/tasks.component';\nimport { NewTaskComponent, resolveTitle } from '../tasks/new-task/new-task.component';\nimport { TasksService } from '../tasks/tasks.service';\nimport { Task } from '../tasks/task/task.model';\nimport { inject } from '@angular/core';\n\n\nconst resolveUserTasks: ResolveFn<Task[]> = (\n    activatedRouteSnapshot,\n    routerState\n  ) => {\n    const order = activatedRouteSnapshot.queryParams['order'];\n    const tasksService = inject(TasksService);\n    const tasks = tasksService\n      .allTasks()\n      .filter(\n        (task) => task.userId === activatedRouteSnapshot.paramMap.get('userId')\n      );\n  \n    if (order && order === 'asc') {\n      tasks.sort((a, b) => (a.id > b.id ? 1 : -1));\n    } else {\n      tasks.sort((a, b) => (a.id > b.id ? -1 : 1));\n    }\n  \n    return tasks.length ? tasks : [];\n  };\n  \nexport const routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'tasks',\n    pathMatch: 'full',\n  },\n  {\n    path: 'tasks', // <your-domain>/users/<uid>/tasks\n    loadComponent:()=> import(\"../tasks/tasks.component\").then(mod=>mod.TasksComponent),\n    runGuardsAndResolvers:'always', //this cahneg will allow resolver to run when routes or query parameters change\n    resolve: {\n      userTasks: resolveUserTasks,\n    },\n    title:resolveTitle\n  },\n  {\n    path: 'tasks/new',\n    component: NewTaskComponent,\n    // canDeactivate:[canLeaveEditPage]\n  },\n];\n"],"mappings":"AAEA;AACA,SAASA,gBAAgB,EAAEC,YAAY,QAAQ,sCAAsC;AACrF,SAASC,YAAY,QAAQ,wBAAwB;AAErD,SAASC,MAAM,QAAQ,eAAe;AAGtC,MAAMC,gBAAgB,GAAsBA,CACxCC,sBAAsB,EACtBC,WAAW,KACT;EACF,MAAMC,KAAK,GAAGF,sBAAsB,CAACG,WAAW,CAAC,OAAO,CAAC;EACzD,MAAMC,YAAY,GAAGN,MAAM,CAACD,YAAY,CAAC;EACzC,MAAMQ,KAAK,GAAGD,YAAY,CACvBE,QAAQ,EAAE,CACVC,MAAM,CACJC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKT,sBAAsB,CAACU,QAAQ,CAACC,GAAG,CAAC,QAAQ,CAAC,CACxE;EAEH,IAAIT,KAAK,IAAIA,KAAK,KAAK,KAAK,EAAE;IAC5BG,KAAK,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;GAC7C,MAAM;IACLV,KAAK,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAE,CAAC;;EAG9C,OAAOV,KAAK,CAACW,MAAM,GAAGX,KAAK,GAAG,EAAE;AAClC,CAAC;AAEH,OAAO,MAAMY,MAAM,GAAW,CAC5B;EACEC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,OAAO;EACnBC,SAAS,EAAE;CACZ,EACD;EACEF,IAAI,EAAE,OAAO;EACbG,aAAa,EAACA,CAAA,KAAK,MAAM,CAAC,0BAA0B,CAAC,CAACC,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,cAAc,CAAC;EACnFC,qBAAqB,EAAC,QAAQ;EAC9BC,OAAO,EAAE;IACPC,SAAS,EAAE5B;GACZ;EACD6B,KAAK,EAAChC;CACP,EACD;EACEsB,IAAI,EAAE,WAAW;EACjBW,SAAS,EAAElC;EACX;CACD,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}