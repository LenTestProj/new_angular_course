{"ast":null,"code":"import { signal } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nexport class TasksService {\n  constructor() {\n    this.tasks = signal([]);\n  }\n  addTask(taskData) {\n    const newTask = {\n      ...taskData,\n      id: Math.random().toString(),\n      status: \"OPEN\"\n    };\n    this.tasks.update(oldTasks => {\n      return [...oldTasks, newTask];\n    });\n  }\n  static #_ = this.ɵfac = function TasksService_Factory(t) {\n    return new (t || TasksService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TasksService,\n    factory: TasksService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["signal","TasksService","constructor","tasks","addTask","taskData","newTask","id","Math","random","toString","status","update","oldTasks","_","_2","factory","ɵfac","providedIn"],"sources":["/home/lennon/Angular/New Tutorials/Section9:Understanding_Services_Dependency_Injection/starting-project/src/app/tasks/tasks.service.ts"],"sourcesContent":["import { Injectable, signal } from \"@angular/core\";\nimport { Task } from \"./task.model\";\n\n@Injectable({\n    providedIn:'root'\n})\nexport class TasksService {\n    tasks =signal<Task[]>([]);\n\n    addTask(taskData:{title:string; description:string}){\n        const newTask:Task={...taskData,id:Math.random().toString(),\n        status:\"OPEN\"};\n\n        this.tasks.update((oldTasks)=>{\n            return [...oldTasks,newTask]\n        })\n    }\n}"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;;AAMlD,OAAM,MAAOC,YAAY;EAHzBC,YAAA;IAII,KAAAC,KAAK,GAAEH,MAAM,CAAS,EAAE,CAAC;;EAEzBI,OAAOA,CAACC,QAA2C;IAC/C,MAAMC,OAAO,GAAM;MAAC,GAAGD,QAAQ;MAACE,EAAE,EAACC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE;MAC3DC,MAAM,EAAC;IAAM,CAAC;IAEd,IAAI,CAACR,KAAK,CAACS,MAAM,CAAEC,QAAQ,IAAG;MAC1B,OAAO,CAAC,GAAGA,QAAQ,EAACP,OAAO,CAAC;IAChC,CAAC,CAAC;EACN;EAAC,QAAAQ,CAAA,G;qBAVQb,YAAY;EAAA;EAAA,QAAAc,EAAA,G;WAAZd,YAAY;IAAAe,OAAA,EAAZf,YAAY,CAAAgB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}