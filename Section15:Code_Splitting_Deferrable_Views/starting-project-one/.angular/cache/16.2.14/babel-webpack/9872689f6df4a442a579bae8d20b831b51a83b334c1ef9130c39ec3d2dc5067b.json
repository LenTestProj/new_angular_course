{"ast":null,"code":"// import { canLeaveEditPage, resolveTitle, resolveUserTasks } from '../tasks/tasks.component';\nimport { NewTaskComponent, resolveTitle } from '../tasks/new-task/new-task.component';\nimport { TasksComponent, resolveUserTasks } from '../tasks/tasks.component';\nexport const routes = [{\n  path: '',\n  redirectTo: 'tasks',\n  pathMatch: 'full'\n}, {\n  path: 'tasks',\n  component: TasksComponent,\n  runGuardsAndResolvers: 'always',\n  resolve: {\n    userTasks: resolveUserTasks\n  },\n  title: resolveTitle\n}, {\n  path: 'tasks/new',\n  component: NewTaskComponent\n  // canDeactivate:[canLeaveEditPage]\n}];","map":{"version":3,"names":["NewTaskComponent","resolveTitle","TasksComponent","resolveUserTasks","routes","path","redirectTo","pathMatch","component","runGuardsAndResolvers","resolve","userTasks","title"],"sources":["/home/lennon/Angular/New Tutorials/Section15:Code_Splitting_Deferrable_Views/starting-project/src/app/users/users.route.ts"],"sourcesContent":["import { ResolveFn, Routes } from '@angular/router';\n\n// import { canLeaveEditPage, resolveTitle, resolveUserTasks } from '../tasks/tasks.component';\nimport { NewTaskComponent, resolveTitle } from '../tasks/new-task/new-task.component';\nimport { TasksComponent,resolveUserTasks } from '../tasks/tasks.component';\n\n\n\nexport const routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'tasks',\n    pathMatch: 'full',\n  },\n  {\n    path: 'tasks', // <your-domain>/users/<uid>/tasks\n    component:TasksComponent,\n    runGuardsAndResolvers:'always', //this cahneg will allow resolver to run when routes or query parameters change\n    resolve: {\n      userTasks: resolveUserTasks,\n    },\n    title:resolveTitle\n  },\n  {\n    path: 'tasks/new',\n    component: NewTaskComponent,\n    // canDeactivate:[canLeaveEditPage]\n  },\n];\n"],"mappings":"AAEA;AACA,SAASA,gBAAgB,EAAEC,YAAY,QAAQ,sCAAsC;AACrF,SAASC,cAAc,EAACC,gBAAgB,QAAQ,0BAA0B;AAI1E,OAAO,MAAMC,MAAM,GAAW,CAC5B;EACEC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,OAAO;EACnBC,SAAS,EAAE;CACZ,EACD;EACEF,IAAI,EAAE,OAAO;EACbG,SAAS,EAACN,cAAc;EACxBO,qBAAqB,EAAC,QAAQ;EAC9BC,OAAO,EAAE;IACPC,SAAS,EAAER;GACZ;EACDS,KAAK,EAACX;CACP,EACD;EACEI,IAAI,EAAE,WAAW;EACjBG,SAAS,EAAER;EACX;CACD,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}